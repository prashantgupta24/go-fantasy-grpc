// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/fpl.proto

package customer

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00519c44ffdc0ef5, []int{0}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReply) Reset()         { *m = HelloReply{} }
func (m *HelloReply) String() string { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()    {}
func (*HelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00519c44ffdc0ef5, []int{1}
}

func (m *HelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReply.Unmarshal(m, b)
}
func (m *HelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)
}
func (m *HelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReply.Merge(m, src)
}
func (m *HelloReply) XXX_Size() int {
	return xxx_messageInfo_HelloReply.Size(m)
}
func (m *HelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReply proto.InternalMessageInfo

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type NumPlayerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumPlayerRequest) Reset()         { *m = NumPlayerRequest{} }
func (m *NumPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*NumPlayerRequest) ProtoMessage()    {}
func (*NumPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00519c44ffdc0ef5, []int{2}
}

func (m *NumPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumPlayerRequest.Unmarshal(m, b)
}
func (m *NumPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumPlayerRequest.Marshal(b, m, deterministic)
}
func (m *NumPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumPlayerRequest.Merge(m, src)
}
func (m *NumPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_NumPlayerRequest.Size(m)
}
func (m *NumPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NumPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NumPlayerRequest proto.InternalMessageInfo

type NumPlayers struct {
	NumPlayers           int64    `protobuf:"varint,1,opt,name=numPlayers,proto3" json:"numPlayers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumPlayers) Reset()         { *m = NumPlayers{} }
func (m *NumPlayers) String() string { return proto.CompactTextString(m) }
func (*NumPlayers) ProtoMessage()    {}
func (*NumPlayers) Descriptor() ([]byte, []int) {
	return fileDescriptor_00519c44ffdc0ef5, []int{3}
}

func (m *NumPlayers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumPlayers.Unmarshal(m, b)
}
func (m *NumPlayers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumPlayers.Marshal(b, m, deterministic)
}
func (m *NumPlayers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumPlayers.Merge(m, src)
}
func (m *NumPlayers) XXX_Size() int {
	return xxx_messageInfo_NumPlayers.Size(m)
}
func (m *NumPlayers) XXX_DiscardUnknown() {
	xxx_messageInfo_NumPlayers.DiscardUnknown(m)
}

var xxx_messageInfo_NumPlayers proto.InternalMessageInfo

func (m *NumPlayers) GetNumPlayers() int64 {
	if m != nil {
		return m.NumPlayers
	}
	return 0
}

type LeagueCode struct {
	LeagueCode           int64    `protobuf:"varint,1,opt,name=LeagueCode,proto3" json:"LeagueCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueCode) Reset()         { *m = LeagueCode{} }
func (m *LeagueCode) String() string { return proto.CompactTextString(m) }
func (*LeagueCode) ProtoMessage()    {}
func (*LeagueCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_00519c44ffdc0ef5, []int{4}
}

func (m *LeagueCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueCode.Unmarshal(m, b)
}
func (m *LeagueCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueCode.Marshal(b, m, deterministic)
}
func (m *LeagueCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueCode.Merge(m, src)
}
func (m *LeagueCode) XXX_Size() int {
	return xxx_messageInfo_LeagueCode.Size(m)
}
func (m *LeagueCode) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueCode.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueCode proto.InternalMessageInfo

func (m *LeagueCode) GetLeagueCode() int64 {
	if m != nil {
		return m.LeagueCode
	}
	return 0
}

type NumParticipants struct {
	NumParticipants      int64    `protobuf:"varint,1,opt,name=numParticipants,proto3" json:"numParticipants,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumParticipants) Reset()         { *m = NumParticipants{} }
func (m *NumParticipants) String() string { return proto.CompactTextString(m) }
func (*NumParticipants) ProtoMessage()    {}
func (*NumParticipants) Descriptor() ([]byte, []int) {
	return fileDescriptor_00519c44ffdc0ef5, []int{5}
}

func (m *NumParticipants) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumParticipants.Unmarshal(m, b)
}
func (m *NumParticipants) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumParticipants.Marshal(b, m, deterministic)
}
func (m *NumParticipants) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumParticipants.Merge(m, src)
}
func (m *NumParticipants) XXX_Size() int {
	return xxx_messageInfo_NumParticipants.Size(m)
}
func (m *NumParticipants) XXX_DiscardUnknown() {
	xxx_messageInfo_NumParticipants.DiscardUnknown(m)
}

var xxx_messageInfo_NumParticipants proto.InternalMessageInfo

func (m *NumParticipants) GetNumParticipants() int64 {
	if m != nil {
		return m.NumParticipants
	}
	return 0
}

type GameweekReq struct {
	LeagueCode           int64    `protobuf:"varint,1,opt,name=LeagueCode,proto3" json:"LeagueCode,omitempty"`
	Gameweek             int64    `protobuf:"varint,2,opt,name=Gameweek,proto3" json:"Gameweek,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameweekReq) Reset()         { *m = GameweekReq{} }
func (m *GameweekReq) String() string { return proto.CompactTextString(m) }
func (*GameweekReq) ProtoMessage()    {}
func (*GameweekReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00519c44ffdc0ef5, []int{6}
}

func (m *GameweekReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameweekReq.Unmarshal(m, b)
}
func (m *GameweekReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameweekReq.Marshal(b, m, deterministic)
}
func (m *GameweekReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameweekReq.Merge(m, src)
}
func (m *GameweekReq) XXX_Size() int {
	return xxx_messageInfo_GameweekReq.Size(m)
}
func (m *GameweekReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GameweekReq.DiscardUnknown(m)
}

var xxx_messageInfo_GameweekReq proto.InternalMessageInfo

func (m *GameweekReq) GetLeagueCode() int64 {
	if m != nil {
		return m.LeagueCode
	}
	return 0
}

func (m *GameweekReq) GetGameweek() int64 {
	if m != nil {
		return m.Gameweek
	}
	return 0
}

type PlayerOccuranceData struct {
	PlayerName                 string           `protobuf:"bytes,1,opt,name=playerName,proto3" json:"playerName,omitempty"`
	PlayerOccuranceForGameweek int32            `protobuf:"varint,2,opt,name=playerOccuranceForGameweek,proto3" json:"playerOccuranceForGameweek,omitempty"`
	PlayerOccurance            map[string]int32 `protobuf:"bytes,3,rep,name=playerOccurance,proto3" json:"playerOccurance,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral       struct{}         `json:"-"`
	XXX_unrecognized           []byte           `json:"-"`
	XXX_sizecache              int32            `json:"-"`
}

func (m *PlayerOccuranceData) Reset()         { *m = PlayerOccuranceData{} }
func (m *PlayerOccuranceData) String() string { return proto.CompactTextString(m) }
func (*PlayerOccuranceData) ProtoMessage()    {}
func (*PlayerOccuranceData) Descriptor() ([]byte, []int) {
	return fileDescriptor_00519c44ffdc0ef5, []int{7}
}

func (m *PlayerOccuranceData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerOccuranceData.Unmarshal(m, b)
}
func (m *PlayerOccuranceData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerOccuranceData.Marshal(b, m, deterministic)
}
func (m *PlayerOccuranceData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerOccuranceData.Merge(m, src)
}
func (m *PlayerOccuranceData) XXX_Size() int {
	return xxx_messageInfo_PlayerOccuranceData.Size(m)
}
func (m *PlayerOccuranceData) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerOccuranceData.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerOccuranceData proto.InternalMessageInfo

func (m *PlayerOccuranceData) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *PlayerOccuranceData) GetPlayerOccuranceForGameweek() int32 {
	if m != nil {
		return m.PlayerOccuranceForGameweek
	}
	return 0
}

func (m *PlayerOccuranceData) GetPlayerOccurance() map[string]int32 {
	if m != nil {
		return m.PlayerOccurance
	}
	return nil
}

type GameweekData struct {
	PlayerOccuranceData  []*PlayerOccuranceData `protobuf:"bytes,1,rep,name=playerOccuranceData,proto3" json:"playerOccuranceData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GameweekData) Reset()         { *m = GameweekData{} }
func (m *GameweekData) String() string { return proto.CompactTextString(m) }
func (*GameweekData) ProtoMessage()    {}
func (*GameweekData) Descriptor() ([]byte, []int) {
	return fileDescriptor_00519c44ffdc0ef5, []int{8}
}

func (m *GameweekData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameweekData.Unmarshal(m, b)
}
func (m *GameweekData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameweekData.Marshal(b, m, deterministic)
}
func (m *GameweekData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameweekData.Merge(m, src)
}
func (m *GameweekData) XXX_Size() int {
	return xxx_messageInfo_GameweekData.Size(m)
}
func (m *GameweekData) XXX_DiscardUnknown() {
	xxx_messageInfo_GameweekData.DiscardUnknown(m)
}

var xxx_messageInfo_GameweekData proto.InternalMessageInfo

func (m *GameweekData) GetPlayerOccuranceData() []*PlayerOccuranceData {
	if m != nil {
		return m.PlayerOccuranceData
	}
	return nil
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "customer.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "customer.HelloReply")
	proto.RegisterType((*NumPlayerRequest)(nil), "customer.NumPlayerRequest")
	proto.RegisterType((*NumPlayers)(nil), "customer.NumPlayers")
	proto.RegisterType((*LeagueCode)(nil), "customer.LeagueCode")
	proto.RegisterType((*NumParticipants)(nil), "customer.numParticipants")
	proto.RegisterType((*GameweekReq)(nil), "customer.GameweekReq")
	proto.RegisterType((*PlayerOccuranceData)(nil), "customer.PlayerOccuranceData")
	proto.RegisterMapType((map[string]int32)(nil), "customer.PlayerOccuranceData.PlayerOccuranceEntry")
	proto.RegisterType((*GameweekData)(nil), "customer.GameweekData")
}

func init() { proto.RegisterFile("grpc/fpl.proto", fileDescriptor_00519c44ffdc0ef5) }

var fileDescriptor_00519c44ffdc0ef5 = []byte{
	// 450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x8d, 0x63, 0x4a, 0xc3, 0xb4, 0xa2, 0xd5, 0x34, 0x80, 0xb1, 0x04, 0xaa, 0xf6, 0x80, 0x72,
	0x40, 0x01, 0x99, 0x0b, 0x2a, 0x12, 0x07, 0xa0, 0x5f, 0x52, 0xe4, 0x54, 0xe6, 0x8a, 0x84, 0xb6,
	0x66, 0x6a, 0x55, 0xf5, 0xc7, 0x76, 0xbd, 0x06, 0xf9, 0x97, 0xf0, 0x2b, 0xf9, 0x0f, 0xc8, 0x1b,
	0x3b, 0xbb, 0x71, 0xa2, 0xf4, 0xe6, 0x79, 0xfb, 0xde, 0xec, 0x9b, 0xd9, 0x27, 0xc3, 0xd3, 0x44,
	0x8a, 0xf8, 0xdd, 0x8d, 0x48, 0xa7, 0x42, 0x16, 0xaa, 0xc0, 0x51, 0x5c, 0x95, 0xaa, 0xc8, 0x48,
	0x32, 0x06, 0xfb, 0x17, 0x94, 0xa6, 0x45, 0x44, 0xf7, 0x15, 0x95, 0x0a, 0x11, 0x1e, 0xe5, 0x3c,
	0x23, 0xcf, 0x39, 0x76, 0x26, 0x4f, 0x22, 0xfd, 0xcd, 0xde, 0x00, 0xb4, 0x1c, 0x91, 0xd6, 0xe8,
	0xc1, 0x6e, 0x46, 0x65, 0xc9, 0x93, 0x8e, 0xd4, 0x95, 0x0c, 0xe1, 0x30, 0xac, 0xb2, 0xab, 0x94,
	0xd7, 0x24, 0xdb, 0x7e, 0xec, 0x2d, 0xc0, 0x12, 0x2b, 0xf1, 0x35, 0x40, 0xbe, 0xac, 0xb4, 0xdc,
	0x8d, 0x2c, 0xa4, 0x61, 0xcf, 0x88, 0x27, 0x15, 0x7d, 0x2d, 0x7e, 0x51, 0xc3, 0x36, 0x55, 0xc7,
	0x36, 0x08, 0xfb, 0x04, 0x07, 0x8d, 0x96, 0x4b, 0x75, 0x1b, 0xdf, 0x0a, 0x9e, 0xab, 0x12, 0x27,
	0x6b, 0x50, 0xab, 0xeb, 0xc3, 0xec, 0x12, 0xf6, 0xce, 0x79, 0x46, 0x7f, 0x88, 0xee, 0x22, 0xba,
	0x7f, 0xe8, 0x2e, 0xf4, 0x61, 0xd4, 0xd1, 0xbd, 0xa1, 0x3e, 0x5d, 0xd6, 0xec, 0xef, 0x10, 0x8e,
	0x16, 0x13, 0xcc, 0xe3, 0xb8, 0x92, 0x3c, 0x8f, 0xe9, 0x1b, 0x57, 0xbc, 0xe9, 0x29, 0x34, 0x1c,
	0x9a, 0x8d, 0x5a, 0x08, 0x7e, 0x06, 0x5f, 0xac, 0xca, 0xce, 0x0a, 0xb9, 0x72, 0xcb, 0x4e, 0xb4,
	0x85, 0x81, 0x3f, 0xe0, 0xa0, 0x77, 0xea, 0xb9, 0xc7, 0xee, 0x64, 0x2f, 0x08, 0xa6, 0xdd, 0xfb,
	0x4e, 0x37, 0xf8, 0xea, 0x63, 0xa7, 0xb9, 0x92, 0x75, 0xd4, 0x6f, 0xe5, 0x7f, 0x81, 0xf1, 0x26,
	0x22, 0x1e, 0x82, 0x7b, 0x47, 0x75, 0x3b, 0x4e, 0xf3, 0x89, 0x63, 0xd8, 0xf9, 0xcd, 0xd3, 0x8a,
	0x5a, 0xcb, 0x8b, 0xe2, 0x64, 0xf8, 0xd1, 0x61, 0x3f, 0x61, 0xbf, 0x73, 0xab, 0x37, 0x32, 0x87,
	0x23, 0xb1, 0x6e, 0xc8, 0x73, 0xb4, 0xeb, 0x57, 0x5b, 0x5d, 0x47, 0x9b, 0x94, 0xc1, 0x29, 0xec,
	0x9e, 0x4b, 0x22, 0x45, 0x12, 0x4f, 0x60, 0xf4, 0x9d, 0xd7, 0x3a, 0xa8, 0xf8, 0xdc, 0xb4, 0xb2,
	0xd3, 0xed, 0x8f, 0xd7, 0x70, 0x91, 0xd6, 0x6c, 0x10, 0xfc, 0x73, 0xc0, 0x3d, 0xbb, 0x9a, 0xe1,
	0x05, 0x60, 0x42, 0x2a, 0xac, 0xb2, 0x6b, 0x92, 0xf3, 0x9b, 0x2e, 0xb5, 0xbe, 0x51, 0xf5, 0xf3,
	0x6d, 0x77, 0x34, 0x39, 0x67, 0x03, 0x9c, 0xc1, 0x8b, 0x84, 0x94, 0x9d, 0xb8, 0xcb, 0x7c, 0x11,
	0x27, 0xb4, 0x24, 0x26, 0x60, 0xfe, 0x4b, 0x83, 0xf6, 0xa3, 0x3a, 0xc0, 0x50, 0xfb, 0x6a, 0x26,
	0xb6, 0xdf, 0xff, 0x99, 0x91, 0x58, 0x51, 0xf6, 0xb7, 0xef, 0x91, 0x0d, 0xde, 0x3b, 0xd7, 0x8f,
	0xf5, 0x6f, 0xe0, 0xc3, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x13, 0xf4, 0xd1, 0x18, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// Sends a greeting
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/customer.Greeter/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// Sends a greeting
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.Greeter/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "customer.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Greeter_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/fpl.proto",
}

// FPLClient is the client API for FPL service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FPLClient interface {
	GetNumberOfPlayers(ctx context.Context, in *NumPlayerRequest, opts ...grpc.CallOption) (*NumPlayers, error)
	GetParticipantsInLeague(ctx context.Context, in *LeagueCode, opts ...grpc.CallOption) (*NumParticipants, error)
	GetDataForGameweek(ctx context.Context, in *GameweekReq, opts ...grpc.CallOption) (FPL_GetDataForGameweekClient, error)
}

type fPLClient struct {
	cc *grpc.ClientConn
}

func NewFPLClient(cc *grpc.ClientConn) FPLClient {
	return &fPLClient{cc}
}

func (c *fPLClient) GetNumberOfPlayers(ctx context.Context, in *NumPlayerRequest, opts ...grpc.CallOption) (*NumPlayers, error) {
	out := new(NumPlayers)
	err := c.cc.Invoke(ctx, "/customer.FPL/getNumberOfPlayers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fPLClient) GetParticipantsInLeague(ctx context.Context, in *LeagueCode, opts ...grpc.CallOption) (*NumParticipants, error) {
	out := new(NumParticipants)
	err := c.cc.Invoke(ctx, "/customer.FPL/getParticipantsInLeague", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fPLClient) GetDataForGameweek(ctx context.Context, in *GameweekReq, opts ...grpc.CallOption) (FPL_GetDataForGameweekClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FPL_serviceDesc.Streams[0], "/customer.FPL/getDataForGameweek", opts...)
	if err != nil {
		return nil, err
	}
	x := &fPLGetDataForGameweekClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FPL_GetDataForGameweekClient interface {
	Recv() (*PlayerOccuranceData, error)
	grpc.ClientStream
}

type fPLGetDataForGameweekClient struct {
	grpc.ClientStream
}

func (x *fPLGetDataForGameweekClient) Recv() (*PlayerOccuranceData, error) {
	m := new(PlayerOccuranceData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FPLServer is the server API for FPL service.
type FPLServer interface {
	GetNumberOfPlayers(context.Context, *NumPlayerRequest) (*NumPlayers, error)
	GetParticipantsInLeague(context.Context, *LeagueCode) (*NumParticipants, error)
	GetDataForGameweek(*GameweekReq, FPL_GetDataForGameweekServer) error
}

func RegisterFPLServer(s *grpc.Server, srv FPLServer) {
	s.RegisterService(&_FPL_serviceDesc, srv)
}

func _FPL_GetNumberOfPlayers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NumPlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FPLServer).GetNumberOfPlayers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.FPL/GetNumberOfPlayers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FPLServer).GetNumberOfPlayers(ctx, req.(*NumPlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FPL_GetParticipantsInLeague_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeagueCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FPLServer).GetParticipantsInLeague(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.FPL/GetParticipantsInLeague",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FPLServer).GetParticipantsInLeague(ctx, req.(*LeagueCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _FPL_GetDataForGameweek_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GameweekReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FPLServer).GetDataForGameweek(m, &fPLGetDataForGameweekServer{stream})
}

type FPL_GetDataForGameweekServer interface {
	Send(*PlayerOccuranceData) error
	grpc.ServerStream
}

type fPLGetDataForGameweekServer struct {
	grpc.ServerStream
}

func (x *fPLGetDataForGameweekServer) Send(m *PlayerOccuranceData) error {
	return x.ServerStream.SendMsg(m)
}

var _FPL_serviceDesc = grpc.ServiceDesc{
	ServiceName: "customer.FPL",
	HandlerType: (*FPLServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getNumberOfPlayers",
			Handler:    _FPL_GetNumberOfPlayers_Handler,
		},
		{
			MethodName: "getParticipantsInLeague",
			Handler:    _FPL_GetParticipantsInLeague_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "getDataForGameweek",
			Handler:       _FPL_GetDataForGameweek_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc/fpl.proto",
}
